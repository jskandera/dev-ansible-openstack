---
# tasks file for hoplacloud.skeleton
- name: set openstack auth vars
  set_fact:
    os_auth:
      auth_url: "https://fr-east-1.pub.hopla.cloud:13000/v3"
      username: "{{ api_user }}"
      password: "{{ api_password }}"
      project_name: "{{ api_project }}"
      project_domain_name: "default"
      user_domain_name: "default"

- name: Create network
  os_network:
    auth: "{{ os_auth }}"
    name: "Lan"
    port_security_enabled: yes
  when: lan_present == true

- name: Create subnet
  os_subnet:
    auth: "{{ os_auth }}"
    network_name: "Lan"
    name: "Lan-1"
    cidr: 10.15.30.0/24
    dns_nameservers:
       - 8.8.8.8
       - 8.8.4.4
    host_routes:
       - destination: 0.0.0.0/0
         nexthop: 10.15.30.254
  when: lan_present == true

- name: Create security group "WL-infogerance-hopla"
  os_security_group:
    auth: "{{ os_auth }}"
    name: "WL-infogerance-hopla"
    description: Whitelist des IP utilisées par hopla dans le cadre de votre contrat d'infogérance.

- name: Create security group "WL-Lan-1"
  os_security_group:
    auth: "{{ os_auth }}"
    name: "WL-Lan-1"
    description: Lan-1 acces
  when: lan_present == true

- name: Create security group "WL-{{ username }}"
  os_security_group:
    auth: "{{ os_auth }}"
    name: "WL-{{ username }}"
    description: Whitelist de vos IP
  when: (ip_user_v4 is defined) and (ip_user_v4 |length > 4)

- name: Create security group rule in "WL-{{ username }}" IPv4
  os_security_group_rule:
    auth: "{{ os_auth }}"
    security_group: "WL-{{ username }}"
    remote_ip_prefix: "{{ item }}"
  with_items: "{{ ip_user_v4 }}"
  when: (ip_user_v4 is defined) and (ip_user_v4 |length > 4)
  ignore_errors: true

- name: Create security group rule in "WL-{{ username }}" IPv6
  os_security_group_rule:
    auth: "{{ os_auth }}"
    security_group: "WL-{{ username }}"
    remote_ip_prefix: "{{ item }}"
    ethertype: "IPv6"
  with_items: "{{ ip_user_v6 }}"
  when: (ip_user_v6 is defined) and (ip_user_v6 |length > 4)
  ignore_errors: true

- name: Create security group rule in "WL-Lan-1"
  os_security_group_rule:
    auth: "{{ os_auth }}"
    security_group: "WL-Lan-1"
    remote_ip_prefix: 10.15.30.0/24
  when: lan_present == true
  ignore_errors: true

- name: Create security group rule in "WL-infogerance-hopla" IPv4
  os_security_group_rule:
    auth: "{{ os_auth }}"
    security_group: "WL-infogerance-hopla"
    remote_ip_prefix: "{{ item }}"
  with_items: "{{ ip_hopla_v4 }}"
  ignore_errors: true

- name: Create security group rule in "WL-infogerance-hopla" IPv6
  os_security_group_rule:
    auth: "{{ os_auth }}"
    security_group: "WL-infogerance-hopla"
    remote_ip_prefix: "{{ item }}"
    ethertype: "IPv6"
  with_items: "{{ ip_hopla_v6 }}"
  ignore_errors: true

- name: Import public key
  os_keypair:
    auth: "{{ os_auth }}"
    name: "{{ username }}"
    public_key: "{{ public_key }}"
  when: (public_key is defined) and (public_key |length > 4)

- name: Create a port (router lan interface)
  os_port:
       auth: "{{ os_auth }}"
       name: "R1-lan-1"
       network: "Lan"
       security_groups: "WL-Lan-1"
       fixed_ips:
         - ip_address: 10.15.30.254
  when: lan_present == true

- name: Create RouterOS instance
  os_server:
       auth: "{{ os_auth }}"
       name: "R1"
       image: Mikrotik-RouterOS-6.43.16-LTS-x86_64
       key_name: "{{ username }}"
       timeout: 200
       flavor: std.1
       nics:
         - net-name: fr-east-1-public
         - port-name: "R1-lan-1"
       auto_ip: no
       boot_from_volume: yes
       terminate_volume: no
       security_groups: "WL-infogerance-hopla, WL-{{ username }}"
       meta: "router=routeros"
  when: lan_present == true
